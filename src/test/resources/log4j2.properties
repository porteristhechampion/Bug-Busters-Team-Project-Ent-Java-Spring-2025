# --------------------------------------------------------
# Log4j2 configuration for BugBusters Cat Meme project
# --------------------------------------------------------

# Internal Log4j2 status logging level (uncomment to enable detailed startup debug)
# status = debug

# Base directory for all log files
property.filepath = logs

# List of appenders (output channels) to be used by the loggers
appenders = console, file, hibernate

# ============================
# Console Appender
# ============================

# Use the Console appender class
appender.console.type = Console

# Logical name for this appender
appender.console.name = STDOUT

# Layout class to format the log events
appender.console.layout.type = PatternLayout

# Pattern: level, timestamp, thread, logger, message
appender.console.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

# ============================
# File Appender (Application Logs)
# ============================

# Use the File appender class
appender.file.type = File

# Logical name for this appender
appender.file.name = LOGFILE

# Output file path and name, using property.filepath
appender.file.fileName = ${filepath}/cat-meme.log

# Layout class to format the file logs
appender.file.layout.type = PatternLayout

# Pattern: level, timestamp, thread, logger, message
appender.file.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

# ============================
# RollingFile Appender (Hibernate Logs)
# ============================

# Use a RollingFile appender for log rotation
appender.hibernate.type = RollingFile

# Logical name for this appender
appender.hibernate.name = HIBFILE

# Active log file path
appender.hibernate.fileName = ${filepath}/hibernate.log

# Rollover file naming pattern
appender.hibernate.filePattern = ${filepath}/hibernate_%d{yyyyMMdd_HHmm}.log

# Layout for rollover logs
appender.hibernate.layout.type = PatternLayout

# Consistent formatting for rollover logs
appender.hibernate.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

# Policies block controls when rollover occurs
appender.hibernate.policies.type = Policies

# Roll over on each application start
appender.hibernate.policies.time.type = OnStartupTriggeringPolicy

# Strategy block controls how old log files are cleaned up
appender.hibernate.strategy.type = DefaultRolloverStrategy

# Delete old log files
appender.hibernate.strategy.delete.type = Delete

# Directory to delete from, using property.filepath
appender.hibernate.strategy.delete.basePath = ${filepath}

# Only delete files at this depth
appender.hibernate.strategy.delete.maxDepth = 1

# Condition: If accumulated file count exceeds this
appender.hibernate.strategy.delete.ifAccumulatedFileCount.type = IfAccumulatedFileCount

# Maximum number of log files to keep
appender.hibernate.strategy.delete.ifAccumulatedFileCount.exceeds = 5

# ============================
# Logger Definitions
# ============================

# Define which loggers to configure
loggers = file, hibernate

# Application logger for com.bugbusters package
# Package or class to capture
logger.file.name = com.bugbusters

# Minimum level to log (debug and above)
logger.file.level = debug

# Attach the 'file' appender
logger.file.appenderRefs = file

# Reference the LOGFILE appender
logger.file.appenderRef.file.ref = LOGFILE

# Prevent messages from also going to the root logger
logger.file.additivity = false

# Hibernate-specific logger
# Capture Hibernate logs
logger.hibernate.name = org.hibernate

# Minimum level to log (debug and above)
logger.hibernate.level = debug

# Attach the 'hibernate' appender
logger.hibernate.appenderRefs = hibernate

# Reference the HIBFILE appender
logger.hibernate.appenderRef.hibernate.ref = HIBFILE

# Prevent messages from also going to the root logger
logger.hibernate.additivity = false

# ============================
# Root Logger (fallback)
# ============================

# Only log errors at the root level
rootLogger.level = error

# Send root-level logs to console
rootLogger.appenderRefs = stdout

# Reference the STDOUT appender
rootLogger.appenderRef.stdout.ref = STDOUT
